// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: math.proto

package mathproto

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type PlusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	A int64 `protobuf:"varint,1,opt,name=A,proto3" json:"A,omitempty"`
	B int64 `protobuf:"varint,2,opt,name=B,proto3" json:"B,omitempty"`
}

func (x *PlusRequest) Reset() {
	*x = PlusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_math_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlusRequest) ProtoMessage() {}

func (x *PlusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_math_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlusRequest.ProtoReflect.Descriptor instead.
func (*PlusRequest) Descriptor() ([]byte, []int) {
	return file_math_proto_rawDescGZIP(), []int{0}
}

func (x *PlusRequest) GetA() int64 {
	if x != nil {
		return x.A
	}
	return 0
}

func (x *PlusRequest) GetB() int64 {
	if x != nil {
		return x.B
	}
	return 0
}

type PlusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	C int64 `protobuf:"varint,1,opt,name=C,proto3" json:"C,omitempty"`
}

func (x *PlusResponse) Reset() {
	*x = PlusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_math_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlusResponse) ProtoMessage() {}

func (x *PlusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_math_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlusResponse.ProtoReflect.Descriptor instead.
func (*PlusResponse) Descriptor() ([]byte, []int) {
	return file_math_proto_rawDescGZIP(), []int{1}
}

func (x *PlusResponse) GetC() int64 {
	if x != nil {
		return x.C
	}
	return 0
}

type MultRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	A int64 `protobuf:"varint,1,opt,name=A,proto3" json:"A,omitempty"`
	B int64 `protobuf:"varint,2,opt,name=B,proto3" json:"B,omitempty"`
}

func (x *MultRequest) Reset() {
	*x = MultRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_math_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultRequest) ProtoMessage() {}

func (x *MultRequest) ProtoReflect() protoreflect.Message {
	mi := &file_math_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultRequest.ProtoReflect.Descriptor instead.
func (*MultRequest) Descriptor() ([]byte, []int) {
	return file_math_proto_rawDescGZIP(), []int{2}
}

func (x *MultRequest) GetA() int64 {
	if x != nil {
		return x.A
	}
	return 0
}

func (x *MultRequest) GetB() int64 {
	if x != nil {
		return x.B
	}
	return 0
}

type MultResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	C int64 `protobuf:"varint,1,opt,name=C,proto3" json:"C,omitempty"`
}

func (x *MultResponse) Reset() {
	*x = MultResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_math_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultResponse) ProtoMessage() {}

func (x *MultResponse) ProtoReflect() protoreflect.Message {
	mi := &file_math_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultResponse.ProtoReflect.Descriptor instead.
func (*MultResponse) Descriptor() ([]byte, []int) {
	return file_math_proto_rawDescGZIP(), []int{3}
}

func (x *MultResponse) GetC() int64 {
	if x != nil {
		return x.C
	}
	return 0
}

var File_math_proto protoreflect.FileDescriptor

var file_math_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x6d, 0x61, 0x74, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x6d, 0x61,
	0x74, 0x68, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x29, 0x0a, 0x0b, 0x50, 0x6c, 0x75, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0c, 0x0a, 0x01, 0x41, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x01, 0x41, 0x12, 0x0c, 0x0a, 0x01, 0x42, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x01, 0x42, 0x22, 0x1c, 0x0a, 0x0c, 0x50, 0x6c, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x0c, 0x0a, 0x01, 0x43, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x01, 0x43,
	0x22, 0x29, 0x0a, 0x0b, 0x4d, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0c, 0x0a, 0x01, 0x41, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x01, 0x41, 0x12, 0x0c, 0x0a,
	0x01, 0x42, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x01, 0x42, 0x22, 0x1c, 0x0a, 0x0c, 0x4d,
	0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0c, 0x0a, 0x01, 0x43,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x01, 0x43, 0x32, 0x7c, 0x0a, 0x04, 0x4d, 0x61, 0x74,
	0x68, 0x12, 0x39, 0x0a, 0x04, 0x50, 0x6c, 0x75, 0x73, 0x12, 0x16, 0x2e, 0x6d, 0x61, 0x74, 0x68,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6c, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x17, 0x2e, 0x6d, 0x61, 0x74, 0x68, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6c,
	0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x39, 0x0a, 0x04,
	0x4d, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x2e, 0x6d, 0x61, 0x74, 0x68, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x6d,
	0x61, 0x74, 0x68, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_math_proto_rawDescOnce sync.Once
	file_math_proto_rawDescData = file_math_proto_rawDesc
)

func file_math_proto_rawDescGZIP() []byte {
	file_math_proto_rawDescOnce.Do(func() {
		file_math_proto_rawDescData = protoimpl.X.CompressGZIP(file_math_proto_rawDescData)
	})
	return file_math_proto_rawDescData
}

var file_math_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_math_proto_goTypes = []interface{}{
	(*PlusRequest)(nil),  // 0: mathproto.PlusRequest
	(*PlusResponse)(nil), // 1: mathproto.PlusResponse
	(*MultRequest)(nil),  // 2: mathproto.MultRequest
	(*MultResponse)(nil), // 3: mathproto.MultResponse
}
var file_math_proto_depIdxs = []int32{
	0, // 0: mathproto.Math.Plus:input_type -> mathproto.PlusRequest
	2, // 1: mathproto.Math.Mult:input_type -> mathproto.MultRequest
	1, // 2: mathproto.Math.Plus:output_type -> mathproto.PlusResponse
	3, // 3: mathproto.Math.Mult:output_type -> mathproto.MultResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_math_proto_init() }
func file_math_proto_init() {
	if File_math_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_math_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_math_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_math_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_math_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_math_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_math_proto_goTypes,
		DependencyIndexes: file_math_proto_depIdxs,
		MessageInfos:      file_math_proto_msgTypes,
	}.Build()
	File_math_proto = out.File
	file_math_proto_rawDesc = nil
	file_math_proto_goTypes = nil
	file_math_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// MathClient is the client API for Math service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MathClient interface {
	Plus(ctx context.Context, in *PlusRequest, opts ...grpc.CallOption) (*PlusResponse, error)
	Mult(ctx context.Context, in *MultRequest, opts ...grpc.CallOption) (*MultResponse, error)
}

type mathClient struct {
	cc grpc.ClientConnInterface
}

func NewMathClient(cc grpc.ClientConnInterface) MathClient {
	return &mathClient{cc}
}

func (c *mathClient) Plus(ctx context.Context, in *PlusRequest, opts ...grpc.CallOption) (*PlusResponse, error) {
	out := new(PlusResponse)
	err := c.cc.Invoke(ctx, "/mathproto.Math/Plus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mathClient) Mult(ctx context.Context, in *MultRequest, opts ...grpc.CallOption) (*MultResponse, error) {
	out := new(MultResponse)
	err := c.cc.Invoke(ctx, "/mathproto.Math/Mult", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MathServer is the server API for Math service.
type MathServer interface {
	Plus(context.Context, *PlusRequest) (*PlusResponse, error)
	Mult(context.Context, *MultRequest) (*MultResponse, error)
}

// UnimplementedMathServer can be embedded to have forward compatible implementations.
type UnimplementedMathServer struct {
}

func (*UnimplementedMathServer) Plus(context.Context, *PlusRequest) (*PlusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Plus not implemented")
}
func (*UnimplementedMathServer) Mult(context.Context, *MultRequest) (*MultResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Mult not implemented")
}

func RegisterMathServer(s *grpc.Server, srv MathServer) {
	s.RegisterService(&_Math_serviceDesc, srv)
}

func _Math_Plus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PlusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MathServer).Plus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mathproto.Math/Plus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MathServer).Plus(ctx, req.(*PlusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Math_Mult_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MultRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MathServer).Mult(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mathproto.Math/Mult",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MathServer).Mult(ctx, req.(*MultRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Math_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mathproto.Math",
	HandlerType: (*MathServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Plus",
			Handler:    _Math_Plus_Handler,
		},
		{
			MethodName: "Mult",
			Handler:    _Math_Mult_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "math.proto",
}
